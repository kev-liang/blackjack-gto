{"ast":null,"code":"import _classCallCheck from\"/home/runner/work/blackjack-gto/blackjack-gto/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/runner/work/blackjack-gto/blackjack-gto/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import Url from\"../utils/BackendUrlUtil\";import ApiService from\"./ApiService\";import TableUtils from\"../utils/TableUtils\";import ConstantsFE from\"../utils/constants/ConstantsFE\";import{store}from\"../store\";var ActionServiceFE=/*#__PURE__*/function(){function ActionServiceFE(){var _this=this;_classCallCheck(this,ActionServiceFE);this.determineDisabled=function(players,turnId,handleFn){if(!players||!handleFn)return;var player=TableUtils.findPlayerById(players,turnId);if(!player.isPlaying){return true;}switch(handleFn){case\"handleSplit\":return _this.determineSplit(player,players);case\"handleDouble\":case\"handleSurrender\":return player.cards.length>2;default:return!player.isPlaying;}};this.url=Url;}_createClass(ActionServiceFE,[{key:\"initTable\",value:function initTable(numPlayers){var id=store.getState().table.id;var endpoint=\"\".concat(this.url,\"/init?numPlayers=\").concat(numPlayers,\"&id=\").concat(id);ApiService.getAndUpdateTable(endpoint);}},{key:\"deal\",value:function deal(){var id=store.getState().table.id;var endpoint=\"\".concat(this.url,\"/deal?id=\").concat(id);ApiService.getAndUpdateTable(endpoint);}},{key:\"hit\",value:function hit(playerId){var id=store.getState().table.id;var endpoint=\"\".concat(this.url,\"/hit?playerId=\").concat(playerId,\"&id=\").concat(id);ApiService.getAndUpdateTable(endpoint);}},{key:\"stand\",value:function stand(playerId){var id=store.getState().table.id;var endpoint=\"\".concat(this.url,\"/stand?playerId=\").concat(playerId,\"&id=\").concat(id);ApiService.getAndUpdateTable(endpoint);}},{key:\"split\",value:function split(playerId){var id=store.getState().table.id;var endpoint=\"\".concat(this.url,\"/split?playerId=\").concat(playerId,\"&id=\").concat(id);ApiService.getAndUpdateTable(endpoint);}},{key:\"double\",value:function double(playerId){var id=store.getState().table.id;var endpoint=\"\".concat(this.url,\"/double?playerId=\").concat(playerId,\"&id=\").concat(id);ApiService.getAndUpdateTable(endpoint);}},{key:\"surrender\",value:function surrender(playerId){var id=store.getState().table.id;var endpoint=\"\".concat(this.url,\"/surrender?playerId=\").concat(playerId,\"&id=\").concat(id);ApiService.getAndUpdateTable(endpoint);}},{key:\"dealDealer\",value:function dealDealer(){var id=store.getState().table.id;var endpoint=\"\".concat(this.url,\"/deal-dealer?id=\").concat(id);ApiService.getAndUpdateTable(endpoint);}},{key:\"determineMaxSplit\",value:function determineMaxSplit(players){var splitPlayers=players.filter(function(player){return player.id<0;});return splitPlayers.length===ConstantsFE.MAX_NUM_SPLITS;}},{key:\"determineSplit\",value:function determineSplit(player,players){var isMaxSplit=this.determineMaxSplit(players);var hasMoreThanTwoCards=player.cards.length>2;var hasDifferentCardValues=player.cards[0].value!==player.cards[1].value;return isMaxSplit||hasMoreThanTwoCards||hasDifferentCardValues;}}]);return ActionServiceFE;}();export default new ActionServiceFE();","map":{"version":3,"names":["Url","ApiService","TableUtils","ConstantsFE","store","ActionServiceFE","determineDisabled","players","turnId","handleFn","player","findPlayerById","isPlaying","determineSplit","cards","length","url","numPlayers","id","getState","table","endpoint","getAndUpdateTable","playerId","splitPlayers","filter","MAX_NUM_SPLITS","isMaxSplit","determineMaxSplit","hasMoreThanTwoCards","hasDifferentCardValues","value"],"sources":["/home/runner/work/blackjack-gto/blackjack-gto/client/src/services/ActionServiceFE.js"],"sourcesContent":["import Url from \"../utils/BackendUrlUtil\";\nimport ApiService from \"./ApiService\";\nimport TableUtils from \"../utils/TableUtils\";\nimport ConstantsFE from \"../utils/constants/ConstantsFE\";\n\nimport { store } from \"../store\";\n\nclass ActionServiceFE {\n  constructor() {\n    this.url = Url;\n  }\n\n  initTable(numPlayers) {\n    let id = store.getState().table.id;\n    let endpoint = `${this.url}/init?numPlayers=${numPlayers}&id=${id}`;\n    ApiService.getAndUpdateTable(endpoint);\n  }\n\n  deal() {\n    let id = store.getState().table.id;\n    let endpoint = `${this.url}/deal?id=${id}`;\n    ApiService.getAndUpdateTable(endpoint);\n  }\n\n  hit(playerId) {\n    let id = store.getState().table.id;\n    let endpoint = `${this.url}/hit?playerId=${playerId}&id=${id}`;\n    ApiService.getAndUpdateTable(endpoint);\n  }\n\n  stand(playerId) {\n    let id = store.getState().table.id;\n    let endpoint = `${this.url}/stand?playerId=${playerId}&id=${id}`;\n    ApiService.getAndUpdateTable(endpoint);\n  }\n\n  split(playerId) {\n    let id = store.getState().table.id;\n    let endpoint = `${this.url}/split?playerId=${playerId}&id=${id}`;\n    ApiService.getAndUpdateTable(endpoint);\n  }\n\n  double(playerId) {\n    let id = store.getState().table.id;\n    let endpoint = `${this.url}/double?playerId=${playerId}&id=${id}`;\n    ApiService.getAndUpdateTable(endpoint);\n  }\n\n  surrender(playerId) {\n    let id = store.getState().table.id;\n    let endpoint = `${this.url}/surrender?playerId=${playerId}&id=${id}`;\n    ApiService.getAndUpdateTable(endpoint);\n  }\n\n  dealDealer() {\n    let id = store.getState().table.id;\n    let endpoint = `${this.url}/deal-dealer?id=${id}`;\n    ApiService.getAndUpdateTable(endpoint);\n  }\n\n  determineDisabled = (players, turnId, handleFn) => {\n    if (!players || !handleFn) return;\n    let player = TableUtils.findPlayerById(players, turnId);\n    if (!player.isPlaying) {\n      return true;\n    }\n    switch (handleFn) {\n      case \"handleSplit\":\n        return this.determineSplit(player, players);\n      case \"handleDouble\":\n      case \"handleSurrender\":\n        return player.cards.length > 2;\n      default:\n        return !player.isPlaying;\n    }\n  };\n\n  determineMaxSplit(players) {\n    let splitPlayers = players.filter((player) => player.id < 0);\n    return splitPlayers.length === ConstantsFE.MAX_NUM_SPLITS;\n  }\n\n  determineSplit(player, players) {\n    let isMaxSplit = this.determineMaxSplit(players);\n    let hasMoreThanTwoCards = player.cards.length > 2;\n    let hasDifferentCardValues =\n      player.cards[0].value !== player.cards[1].value;\n    return isMaxSplit || hasMoreThanTwoCards || hasDifferentCardValues;\n  }\n}\n\nexport default new ActionServiceFE();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}