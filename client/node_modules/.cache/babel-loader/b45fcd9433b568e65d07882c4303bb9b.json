{"ast":null,"code":"import _slicedToArray from\"/home/runner/work/blackjack-gto/blackjack-gto/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"styles/Winner.scss\";import{connect}from\"react-redux\";import ConstantsFE from\"utils/constants/ConstantsFE\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";function Winner(props){var table=props.table;var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),winnerText=_React$useState2[0],setWinnerText=_React$useState2[1];React.useEffect(function(){if(!(table!==null&&table!==void 0&&table.winner)){setWinnerText(\"\");return;}getWinnerText(table);},[table]);var getWinnerText=function getWinnerText(table){var result=\"\";if(table.winner.tie){result=\"Dealer and player tied\";}else if(table.winner.player.id===ConstantsFE.DEALER_ID){result=\"Dealer won\";}else{result=\"Player won\";}setWinnerText(\"\".concat(result,\" with \").concat(table.winner.player.cardTotal));};return/*#__PURE__*/_jsx(\"div\",{className:\"winner-container\",children:winnerText});}var mapStateToProps=function mapStateToProps(state){var _state$table;return{table:(_state$table=state.table)===null||_state$table===void 0?void 0:_state$table.table};};export default connect(mapStateToProps,null)(Winner);","map":{"version":3,"names":["connect","ConstantsFE","React","Winner","props","table","useState","winnerText","setWinnerText","useEffect","winner","getWinnerText","result","tie","player","id","DEALER_ID","cardTotal","mapStateToProps","state"],"sources":["/home/runner/work/blackjack-gto/blackjack-gto/client/src/components/middleInfo/Winner.js"],"sourcesContent":["import \"styles/Winner.scss\";\nimport { connect } from \"react-redux\";\nimport ConstantsFE from \"utils/constants/ConstantsFE\";\n\nimport React from \"react\";\n\nfunction Winner(props) {\n  const { table } = props;\n  const [winnerText, setWinnerText] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (!table?.winner) {\n      setWinnerText(\"\");\n      return;\n    }\n    getWinnerText(table);\n  }, [table]);\n\n  const getWinnerText = (table) => {\n    let result = \"\";\n    if (table.winner.tie) {\n      result = \"Dealer and player tied\";\n    } else if (table.winner.player.id === ConstantsFE.DEALER_ID) {\n      result = \"Dealer won\";\n    } else {\n      result = \"Player won\";\n    }\n    setWinnerText(`${result} with ${table.winner.player.cardTotal}`);\n  };\n\n  return <div className=\"winner-container\">{winnerText}</div>;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    table: state.table?.table\n  };\n};\n\nexport default connect(mapStateToProps, null)(Winner);\n"],"mappings":"0IAAA,MAAO,oBAAP,CACA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,YAAP,KAAwB,6BAAxB,CAEA,MAAOC,MAAP,KAAkB,OAAlB,C,2CAEA,QAASC,OAAT,CAAgBC,KAAhB,CAAuB,CACrB,GAAQC,MAAR,CAAkBD,KAAlB,CAAQC,KAAR,CACA,oBAAoCH,KAAK,CAACI,QAAN,CAAe,EAAf,CAApC,oDAAOC,UAAP,qBAAmBC,aAAnB,qBAEAN,KAAK,CAACO,SAAN,CAAgB,UAAM,CACpB,GAAI,EAACJ,KAAD,SAACA,KAAD,WAACA,KAAK,CAAEK,MAAR,CAAJ,CAAoB,CAClBF,aAAa,CAAC,EAAD,CAAb,CACA,OACD,CACDG,aAAa,CAACN,KAAD,CAAb,CACD,CAND,CAMG,CAACA,KAAD,CANH,EAQA,GAAMM,cAAa,CAAG,QAAhBA,cAAgB,CAACN,KAAD,CAAW,CAC/B,GAAIO,OAAM,CAAG,EAAb,CACA,GAAIP,KAAK,CAACK,MAAN,CAAaG,GAAjB,CAAsB,CACpBD,MAAM,CAAG,wBAAT,CACD,CAFD,IAEO,IAAIP,KAAK,CAACK,MAAN,CAAaI,MAAb,CAAoBC,EAApB,GAA2Bd,WAAW,CAACe,SAA3C,CAAsD,CAC3DJ,MAAM,CAAG,YAAT,CACD,CAFM,IAEA,CACLA,MAAM,CAAG,YAAT,CACD,CACDJ,aAAa,WAAII,MAAJ,kBAAmBP,KAAK,CAACK,MAAN,CAAaI,MAAb,CAAoBG,SAAvC,EAAb,CACD,CAVD,CAYA,mBAAO,YAAK,SAAS,CAAC,kBAAf,UAAmCV,UAAnC,EAAP,CACD,CAED,GAAMW,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,KAAD,CAAW,kBACjC,MAAO,CACLd,KAAK,eAAEc,KAAK,CAACd,KAAR,uCAAE,aAAaA,KADf,CAAP,CAGD,CAJD,CAMA,cAAeL,QAAO,CAACkB,eAAD,CAAkB,IAAlB,CAAP,CAA+Bf,MAA/B,CAAf"},"metadata":{},"sourceType":"module"}