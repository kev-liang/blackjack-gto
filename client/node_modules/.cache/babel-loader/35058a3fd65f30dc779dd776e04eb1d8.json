{"ast":null,"code":"import _slicedToArray from\"/home/runner/work/blackjack-gto/blackjack-gto/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{connect}from\"react-redux\";import DecisionConstantsFE from\"utils/constants/DecisionConstantsFE\";import\"styles/CorrectDecision.scss\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CorrectDecision(props){var table=props.table;var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),decisionText=_React$useState2[0],setDecisionText=_React$useState2[1];React.useEffect(function(){if(!table||!table.lastDecision)return;setDecisionText(getDecisionText(table));},[table]);var getDecisionText=function getDecisionText(table){var lastDecision=table.lastDecision;var correctDecision=lastDecision.correctDecision;var playerDecision=lastDecision.playerValues.decision;var correctDecisionString=DecisionConstantsFE.STRING_MAP[correctDecision];var playerDecisionString=DecisionConstantsFE.STRING_MAP[playerDecision];var playerAndDealerValues=\" with a \".concat(lastDecision.isSoft?\"soft\":\"hard\",\" \").concat(lastDecision.playerValues.playerValue,\" against the dealer's \").concat(lastDecision.dealerValue===14?\"A\":lastDecision.dealerValue,\".\");if(playerDecision===correctDecision){return/*#__PURE__*/_jsxs(\"p\",{children:[\"Correct \",/*#__PURE__*/_jsx(\"span\",{className:\"correct-decision\",children:correctDecisionString}),playerAndDealerValues]});}else{return/*#__PURE__*/_jsxs(\"p\",{children:[\"You chose \",/*#__PURE__*/_jsx(\"span\",{className:\"incorrect-decision\",children:playerDecisionString}),\" instead of \",/*#__PURE__*/_jsx(\"span\",{className:\"correct-decision\",children:correctDecisionString}),playerAndDealerValues]});}};return/*#__PURE__*/_jsx(\"div\",{className:\"decision-container\",children:decisionText});}var mapStateToProps=function mapStateToProps(state){var _state$table;return{table:(_state$table=state.table)===null||_state$table===void 0?void 0:_state$table.table};};export default connect(mapStateToProps,null)(CorrectDecision);","map":{"version":3,"names":["connect","DecisionConstantsFE","React","CorrectDecision","props","table","useState","decisionText","setDecisionText","useEffect","lastDecision","getDecisionText","correctDecision","playerDecision","playerValues","decision","correctDecisionString","STRING_MAP","playerDecisionString","playerAndDealerValues","isSoft","playerValue","dealerValue","mapStateToProps","state"],"sources":["/home/runner/work/blackjack-gto/blackjack-gto/client/src/components/middleInfo/CorrectDecision.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport DecisionConstantsFE from \"utils/constants/DecisionConstantsFE\";\nimport \"styles/CorrectDecision.scss\";\nimport React from \"react\";\n\nfunction CorrectDecision(props) {\n  const { table } = props;\n  const [decisionText, setDecisionText] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (!table || !table.lastDecision) return;\n    setDecisionText(getDecisionText(table));\n  }, [table]);\n\n  const getDecisionText = (table) => {\n    let { lastDecision } = table;\n    let { correctDecision } = lastDecision;\n    let playerDecision = lastDecision.playerValues.decision;\n    let correctDecisionString = DecisionConstantsFE.STRING_MAP[correctDecision];\n    let playerDecisionString = DecisionConstantsFE.STRING_MAP[playerDecision];\n\n    let playerAndDealerValues = ` with a ${\n      lastDecision.isSoft ? \"soft\" : \"hard\"\n    } ${lastDecision.playerValues.playerValue} against the dealer's ${\n      lastDecision.dealerValue === 14 ? \"A\" : lastDecision.dealerValue\n    }.`;\n\n    if (playerDecision === correctDecision) {\n      return (\n        <p>\n          {\"Correct \"}\n          <span className=\"correct-decision\">{correctDecisionString}</span>\n          {playerAndDealerValues}\n        </p>\n      );\n    } else {\n      return (\n        <p>\n          {\"You chose \"}\n          <span className=\"incorrect-decision\">{playerDecisionString}</span>\n          {\" instead of \"}\n          <span className=\"correct-decision\">{correctDecisionString}</span>\n          {playerAndDealerValues}\n        </p>\n      );\n    }\n  };\n\n  return <div className=\"decision-container\">{decisionText}</div>;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    table: state.table?.table\n  };\n};\n\nexport default connect(mapStateToProps, null)(CorrectDecision);\n"],"mappings":"0IAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,oBAAP,KAAgC,qCAAhC,CACA,MAAO,6BAAP,CACA,MAAOC,MAAP,KAAkB,OAAlB,C,wFAEA,QAASC,gBAAT,CAAyBC,KAAzB,CAAgC,CAC9B,GAAQC,MAAR,CAAkBD,KAAlB,CAAQC,KAAR,CACA,oBAAwCH,KAAK,CAACI,QAAN,CAAe,EAAf,CAAxC,oDAAOC,YAAP,qBAAqBC,eAArB,qBAEAN,KAAK,CAACO,SAAN,CAAgB,UAAM,CACpB,GAAI,CAACJ,KAAD,EAAU,CAACA,KAAK,CAACK,YAArB,CAAmC,OACnCF,eAAe,CAACG,eAAe,CAACN,KAAD,CAAhB,CAAf,CACD,CAHD,CAGG,CAACA,KAAD,CAHH,EAKA,GAAMM,gBAAe,CAAG,QAAlBA,gBAAkB,CAACN,KAAD,CAAW,CACjC,GAAMK,aAAN,CAAuBL,KAAvB,CAAMK,YAAN,CACA,GAAME,gBAAN,CAA0BF,YAA1B,CAAME,eAAN,CACA,GAAIC,eAAc,CAAGH,YAAY,CAACI,YAAb,CAA0BC,QAA/C,CACA,GAAIC,sBAAqB,CAAGf,mBAAmB,CAACgB,UAApB,CAA+BL,eAA/B,CAA5B,CACA,GAAIM,qBAAoB,CAAGjB,mBAAmB,CAACgB,UAApB,CAA+BJ,cAA/B,CAA3B,CAEA,GAAIM,sBAAqB,mBACvBT,YAAY,CAACU,MAAb,CAAsB,MAAtB,CAA+B,MADR,aAErBV,YAAY,CAACI,YAAb,CAA0BO,WAFL,kCAGvBX,YAAY,CAACY,WAAb,GAA6B,EAA7B,CAAkC,GAAlC,CAAwCZ,YAAY,CAACY,WAH9B,KAAzB,CAMA,GAAIT,cAAc,GAAKD,eAAvB,CAAwC,CACtC,mBACE,qBACG,UADH,cAEE,aAAM,SAAS,CAAC,kBAAhB,UAAoCI,qBAApC,EAFF,CAGGG,qBAHH,GADF,CAOD,CARD,IAQO,CACL,mBACE,qBACG,YADH,cAEE,aAAM,SAAS,CAAC,oBAAhB,UAAsCD,oBAAtC,EAFF,CAGG,cAHH,cAIE,aAAM,SAAS,CAAC,kBAAhB,UAAoCF,qBAApC,EAJF,CAKGG,qBALH,GADF,CASD,CACF,CAhCD,CAkCA,mBAAO,YAAK,SAAS,CAAC,oBAAf,UAAqCZ,YAArC,EAAP,CACD,CAED,GAAMgB,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,KAAD,CAAW,kBACjC,MAAO,CACLnB,KAAK,eAAEmB,KAAK,CAACnB,KAAR,uCAAE,aAAaA,KADf,CAAP,CAGD,CAJD,CAMA,cAAeL,QAAO,CAACuB,eAAD,CAAkB,IAAlB,CAAP,CAA+BpB,eAA/B,CAAf"},"metadata":{},"sourceType":"module"}