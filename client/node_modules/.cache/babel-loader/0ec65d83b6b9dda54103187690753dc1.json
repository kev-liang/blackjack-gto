{"ast":null,"code":"import _objectSpread from\"/home/runner/work/blackjack-gto/blackjack-gto/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/runner/work/blackjack-gto/blackjack-gto/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../styles/SingleCardAction.scss\";import ActionServiceFE from\"../services/ActionServiceFE\";import{connect}from\"react-redux\";import{updateTableAction}from\"../actions/tableActions\";import{bindActionCreators}from\"redux\";import TableUtils from\"../utils/TableUtils\";import ConstantsFE from\"../utils/constants/ConstantsFE\";import React from\"react\";import Tooltip from\"@mui/material/Tooltip\";import Button from\"@mui/material/Button\";import{jsx as _jsx}from\"react/jsx-runtime\";function SingleCardAction(props){var table=props.table,players=props.players,turnId=props.turnId,tableState=props.tableState,action=props.action;var label=action.label,handleFn=action.handleFn,msgReplacement=action.msgReplacement;var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),disabled=_React$useState2[0],setDisabled=_React$useState2[1];var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),buttonStyles=_React$useState4[0],setButtonStyles=_React$useState4[1];var _React$useState5=React.useState(\"\"),_React$useState6=_slicedToArray(_React$useState5,2),tooltip=_React$useState6[0],setTooltip=_React$useState6[1];var determineDisabled;var handleTooltip;var greaterThanTwoCardMessage=\"Cannot ACTION with more than 2 cards\";React.useEffect(function(){if(!table)return;setDisabled(ActionServiceFE.determineDisabled(table.players,table.turnId,handleFn));handleTooltip();},[table,players,determineDisabled,handleFn,handleTooltip]);React.useEffect(function(){if(tableState===ConstantsFE.T_STATE_END){setTooltip(\"\");}},[tableState]);React.useEffect(function(){var defaultStyles={height:50,width:110};if(!disabled){setButtonStyles(defaultStyles);}else{setButtonStyles(_objectSpread(_objectSpread({},defaultStyles),{},{backgroundColor:\"#aaa\",pointerEvents:\"none\"}));}},[disabled]);var handleClick=function handleClick(handleFn){if(disabled)return;switch(handleFn){case\"handleSplit\":handleSplit();break;case\"handleStand\":handleStand();break;case\"handleDouble\":handleDouble();break;case\"handleHit\":handleHit();break;case\"handleSurrender\":handleSurrender();break;default:console.error(\"Unknown handleFn type\");break;}};var handleSplit=function handleSplit(){ActionServiceFE.split(turnId);};var handleStand=function handleStand(){ActionServiceFE.stand(turnId);};var handleDouble=function handleDouble(){ActionServiceFE.double(turnId);};var handleHit=function handleHit(){ActionServiceFE.hit(turnId);};var handleSurrender=function handleSurrender(){ActionServiceFE.surrender(turnId);};handleTooltip=function handleTooltip(){switch(handleFn){case\"handleSplit\":splitTooltip();break;case\"handleDouble\":case\"handleSurrender\":handleGreaterThanTwoCards();break;default:console.error(\"Unexpected tooltip type\");}};var splitTooltip=function splitTooltip(){var player=TableUtils.findPlayerById(players,turnId);var isMaxSplit=ActionServiceFE.determineMaxSplit(players);var hasMoreThanTwoCards=player.cards.length>2;var hasDifferentCardValues=player.cards[0].value!==player.cards[1].value;if(isMaxSplit){setTooltip(\"Cannot split more than \".concat(ConstantsFE.MAX_NUM_SPLITS,\" times\"));}else if(hasMoreThanTwoCards){setTooltip(greaterThanTwoCardMessage.replace(\"ACTION\",msgReplacement));}else if(hasDifferentCardValues){setTooltip(\"Cannot split when dealt cards have different values\");}};var handleGreaterThanTwoCards=function handleGreaterThanTwoCards(){var player=TableUtils.findPlayerById(players,turnId);if(player.cards.length>2){setTooltip(greaterThanTwoCardMessage.replace(\"ACTION\",msgReplacement));}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Tooltip,{title:tooltip,placement:\"top\",children:/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return handleClick(handleFn);},variant:\"contained\",sx:buttonStyles,children:label})})})});}var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({updateTable:updateTableAction},dispatch);};var mapStateToProps=function mapStateToProps(state){var _state$table,_state$table$table,_state$table2,_state$table2$table,_state$table3,_state$table3$table,_state$table4;return{players:(_state$table=state.table)===null||_state$table===void 0?void 0:(_state$table$table=_state$table.table)===null||_state$table$table===void 0?void 0:_state$table$table.players,turnId:(_state$table2=state.table)===null||_state$table2===void 0?void 0:(_state$table2$table=_state$table2.table)===null||_state$table2$table===void 0?void 0:_state$table2$table.turnId,tableState:(_state$table3=state.table)===null||_state$table3===void 0?void 0:(_state$table3$table=_state$table3.table)===null||_state$table3$table===void 0?void 0:_state$table3$table.tableState,table:(_state$table4=state.table)===null||_state$table4===void 0?void 0:_state$table4.table};};export default connect(mapStateToProps,mapDispatchToProps)(SingleCardAction);","map":{"version":3,"names":["ActionServiceFE","connect","updateTableAction","bindActionCreators","TableUtils","ConstantsFE","React","Tooltip","Button","SingleCardAction","props","table","players","turnId","tableState","action","label","handleFn","msgReplacement","useState","disabled","setDisabled","buttonStyles","setButtonStyles","tooltip","setTooltip","determineDisabled","handleTooltip","greaterThanTwoCardMessage","useEffect","T_STATE_END","defaultStyles","height","width","backgroundColor","pointerEvents","handleClick","handleSplit","handleStand","handleDouble","handleHit","handleSurrender","console","error","split","stand","double","hit","surrender","splitTooltip","handleGreaterThanTwoCards","player","findPlayerById","isMaxSplit","determineMaxSplit","hasMoreThanTwoCards","cards","length","hasDifferentCardValues","value","MAX_NUM_SPLITS","replace","mapDispatchToProps","dispatch","updateTable","mapStateToProps","state"],"sources":["/home/runner/work/blackjack-gto/blackjack-gto/client/src/components/SingleCardAction.js"],"sourcesContent":["import \"../styles/SingleCardAction.scss\";\nimport ActionServiceFE from \"../services/ActionServiceFE\";\nimport { connect } from \"react-redux\";\nimport { updateTableAction } from \"../actions/tableActions\";\nimport { bindActionCreators } from \"redux\";\nimport TableUtils from \"../utils/TableUtils\";\nimport ConstantsFE from \"../utils/constants/ConstantsFE\";\nimport React from \"react\";\n\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\n\nfunction SingleCardAction(props) {\n  const { table, players, turnId, tableState, action } = props;\n  const { label, handleFn, msgReplacement } = action;\n  const [disabled, setDisabled] = React.useState(true);\n  const [buttonStyles, setButtonStyles] = React.useState();\n  const [tooltip, setTooltip] = React.useState(\"\");\n  let determineDisabled;\n  let handleTooltip;\n\n  const greaterThanTwoCardMessage = \"Cannot ACTION with more than 2 cards\";\n\n  React.useEffect(() => {\n    if (!table) return;\n\n    setDisabled(\n      ActionServiceFE.determineDisabled(table.players, table.turnId, handleFn)\n    );\n    handleTooltip();\n  }, [table, players, determineDisabled, handleFn, handleTooltip]);\n\n  React.useEffect(() => {\n    if (tableState === ConstantsFE.T_STATE_END) {\n      setTooltip(\"\");\n    }\n  }, [tableState]);\n\n  React.useEffect(() => {\n    const defaultStyles = {\n      height: 50,\n      width: 110\n    };\n    if (!disabled) {\n      setButtonStyles(defaultStyles);\n    } else {\n      setButtonStyles({\n        ...defaultStyles,\n        backgroundColor: \"#aaa\",\n        pointerEvents: \"none\"\n      });\n    }\n  }, [disabled]);\n\n  const handleClick = (handleFn) => {\n    if (disabled) return;\n    switch (handleFn) {\n      case \"handleSplit\":\n        handleSplit();\n        break;\n      case \"handleStand\":\n        handleStand();\n        break;\n      case \"handleDouble\":\n        handleDouble();\n        break;\n      case \"handleHit\":\n        handleHit();\n        break;\n      case \"handleSurrender\":\n        handleSurrender();\n        break;\n      default:\n        console.error(\"Unknown handleFn type\");\n        break;\n    }\n  };\n\n  const handleSplit = () => {\n    ActionServiceFE.split(turnId);\n  };\n\n  const handleStand = () => {\n    ActionServiceFE.stand(turnId);\n  };\n\n  const handleDouble = () => {\n    ActionServiceFE.double(turnId);\n  };\n\n  const handleHit = () => {\n    ActionServiceFE.hit(turnId);\n  };\n\n  const handleSurrender = () => {\n    ActionServiceFE.surrender(turnId);\n  };\n\n  handleTooltip = () => {\n    switch (handleFn) {\n      case \"handleSplit\":\n        splitTooltip();\n        break;\n      case \"handleDouble\":\n      case \"handleSurrender\":\n        handleGreaterThanTwoCards();\n        break;\n      default:\n        console.error(\"Unexpected tooltip type\");\n    }\n  };\n  const splitTooltip = () => {\n    let player = TableUtils.findPlayerById(players, turnId);\n    let isMaxSplit = ActionServiceFE.determineMaxSplit(players);\n    let hasMoreThanTwoCards = player.cards.length > 2;\n    let hasDifferentCardValues =\n      player.cards[0].value !== player.cards[1].value;\n    if (isMaxSplit) {\n      setTooltip(`Cannot split more than ${ConstantsFE.MAX_NUM_SPLITS} times`);\n    } else if (hasMoreThanTwoCards) {\n      setTooltip(greaterThanTwoCardMessage.replace(\"ACTION\", msgReplacement));\n    } else if (hasDifferentCardValues) {\n      setTooltip(\"Cannot split when dealt cards have different values\");\n    }\n  };\n\n  const handleGreaterThanTwoCards = () => {\n    let player = TableUtils.findPlayerById(players, turnId);\n    if (player.cards.length > 2) {\n      setTooltip(greaterThanTwoCardMessage.replace(\"ACTION\", msgReplacement));\n    }\n  };\n\n  return (\n    <div>\n      <Tooltip title={tooltip} placement=\"top\">\n        <span>\n          <Button\n            onClick={() => handleClick(handleFn)}\n            variant=\"contained\"\n            sx={buttonStyles}\n          >\n            {label}\n          </Button>\n        </span>\n      </Tooltip>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      updateTable: updateTableAction\n    },\n    dispatch\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    players: state.table?.table?.players,\n    turnId: state.table?.table?.turnId,\n    tableState: state.table?.table?.tableState,\n    table: state.table?.table\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCardAction);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}